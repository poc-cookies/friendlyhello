version: "3"
services:
  web:
    image: igormoiseyenko/get-started:part2
    deploy:
      replicas: 5 # Run 5 instances of that image as a service called web
      resources:
        limits:
          cpus: "0.1" # Limit each instance to use, at most, 10% of the CPU (across all cores)
          memory: 50M # Limit each instance to use, at most, 50MB of RAM
      restart_policy:
        condition: on-failure # Immediately restart containers if one fails.
    ports:
      - "4000:80" # Map port 4000 on the host to webâ€™s port 80
    networks:
      - webnet # Define the webnet network with the default settings (which is a load-balanced overlay network).
  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - webnet
  redis:
    image: redis
    ports:
      - "6379:6379"
    volumes:
      - "/home/docker/data:/data"
    deploy:
      placement:
        constraints: [node.role == manager]
    command: redis-server --appendonly yes
    networks:
      - webnet
networks:
  webnet: 
